ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Gender and Age Group by Region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
titanic_long <- to_lodes_form(data.frame(Titanic),
key = "Demographic",
axes = 1:3)
ggplot(data = titanic_long,
aes(x = Demographic, stratum = stratum, alluvium = alluvium,
y = Freq, label = stratum)) +
geom_alluvium(aes(fill = Survived)) +
geom_stratum() + geom_text(stat = "stratum") +
theme_minimal() +
ggtitle("passengers on the maiden voyage of the Titanic",
"stratified by demographics and survival")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
# alluvial diagram representation of gender, age group and region
clientGenderAgeGroupByRegion <- client %>%
mutate(age_group = ifelse(age < 21, "young", ifelse(age >= 21 & age <= 60, "adult", "senior"))) %>%
mutate(gender = ifelse(gender == "w", "women", "men")) %>%
inner_join(district, by = "district_id") %>%
group_by(age_group, gender, region) %>%
count()
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region") +
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender, na.rm = TRUE)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = FALSE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
TRUE
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender)) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 10) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = -10) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation",
"Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
coord_flip() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_flow(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
data(vaccinations)
levels(vaccinations$response) <- rev(levels(vaccinations$response))
ggplot(vaccinations,
aes(x = survey, stratum = response, alluvium = subject,
y = freq,
fill = response, label = response)) +
scale_x_discrete(expand = c(.1, .1)) +
geom_flow() +
geom_stratum(alpha = .5) +
geom_text(stat = "stratum", size = 3) +
theme(legend.position = "none") +
ggtitle("vaccination survey responses at three points in time")
View(client)
View(district)
View(clientGenderAgeGroupByRegion)
data(majors)
majors$curriculum <- as.factor(majors$curriculum)
ggplot(majors,
aes(x = semester, stratum = curriculum, alluvium = student,
fill = curriculum, label = curriculum)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
geom_flow(stat = "alluvium", lode.guidance = "rightleft",
color = "darkgray") +
geom_stratum() +
theme(legend.position = "bottom") +
ggtitle("student curricula across several semesters")
View(majors)
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
scale_fill_brewer(type = "qual", palette = "Set2") +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "alluviun", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "alluvium", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
geom_flow(stat = "alluvium", lode.guidance = "rightleft",
color = "darkgray") +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Alluvial diagram representation", "Regio and age group by region")
data(majors)
majors$curriculum <- as.factor(majors$curriculum)
ggplot(majors,
aes(x = semester, stratum = curriculum, alluvium = student,
fill = curriculum, label = curriculum)) +
scale_fill_brewer(type = "qual", palette = "Set2") +
geom_flow(stat = "alluvium", lode.guidance = "rightleft",
color = "darkgray") +
geom_stratum() +
theme(legend.position = "bottom") +
ggtitle("student curricula across several semesters")
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Region and age group by region")
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(ggalluvial)
library(stringr)
library(VIM)
library(psych)
# loading other scripts do be used here ---------------------------------------
source("./scripts/step_00_config_environment.R")
source("./scripts/step_01_create_functions.R")
source("./scripts/step_02_data_ingestion.R")
temp <- transaction[1, ]
temp
sapply(transaction, function(x) sum(is.na(x)))
sapply(client, function(x) sum(is.na(x)))
sapply(disposition, function(x) sum(is.na(x)))
sapply(district, function(x) sum(is.na(x)))
sapply(creditcard, function(x) sum(is.na(x)))
sapply(account, function(x) sum(is.na(x)))
sapply(loan, function(x) sum(is.na(x)))
sapply(permanent_order, function(x) sum(is.na(x)))
sapply(client, function(x) sum(is.na(x)))
sapply(disposition, function(x) sum(is.na(x)))
sapply(district, function(x) sum(is.na(x)))
sapply(creditcard, function(x) sum(is.na(x)))
sapply(account, function(x) sum(is.na(x)))
sapply(loan, function(x) sum(is.na(x)))
sapply(permanent_order, function(x) sum(is.na(x)))
sapply(transaction, function(x) sum(is.na(x)))
sapply(client, function(x) sum(IsEmptyValue(x)))
sapply(transaction, function(x) sum(x == ""))
sapply(transaction, function(x) sum(toString(x) == ""))
sapply(transaction, function(x) sum(length(toString(x)) == 0))
sapply(transaction, function(x) sum(length(toString(x)) > 0))
str(transaction)
transaction     <- read.csv2(paste(dataDirectory, "trans.asc", sep = ""), stringsAsFactors = FALSE)
sapply(transaction, function(x) sum(IsEmptyValue(x)))
str(transaction)
transaction <- transaction %>%
mutate(ifelse(k_symbol == "", NA, k_symbol))
sapply(transaction, function(x) sum(is.na(x)))
str(transaction)
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(ggalluvial)
library(stringr)
library(VIM)
library(psych)
# loading other scripts do be used here ---------------------------------------
source("./scripts/step_00_config_environment.R")
source("./scripts/step_01_create_functions.R")
source("./scripts/step_02_data_ingestion.R")
sapply(transaction, function(x) sum(IsEmptyValue(x)))
sapply(transaction,function(x) table(as.character(x) =="")["TRUE"])
sapply(client, function(x) table(as.character(x) =="")["TRUE"])
sapply(disposition, function(x) table(as.character(x) =="")["TRUE"])
sapply(district, function(x) table(as.character(x) =="")["TRUE"])
sapply(creditcard, function(x) table(as.character(x) =="")["TRUE"])
sapply(loan, function(x) table(as.character(x) =="")["TRUE"])
sapply(permanent_order, function(x) table(as.character(x) =="")["TRUE"])
# looking for empty cells in any column
sapply(client, function(x) table(as.character(x) =="")["TRUE"])
sapply(transaction,function(x) table(as.character(x) =="")["TRUE"])
return(getwd())
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(ggalluvial)
library(stringr)
library(VIM)
library(psych)
library(ggthemes)
source("./scripts/step_00_config_environment.R")
source("./scripts/step_01_create_functions.R")
source("./scripts/step_02_data_ingestion.R")
sapply(client, function(x) sum(is.na(x)))
sapply(disposition, function(x) sum(is.na(x)))
sapply(district, function(x) sum(is.na(x)))
sapply(creditcard, function(x) sum(is.na(x)))
sapply(account, function(x) sum(is.na(x)))
sapply(loan, function(x) sum(is.na(x)))
sapply(permanent_order, function(x) sum(is.na(x)))
sapply(transaction, function(x) sum(is.na(x)))
sapply(client, function(x) table(as.character(x) =="")["TRUE"])
sapply(disposition, function(x) table(as.character(x) =="")["TRUE"])
sapply(district, function(x) table(as.character(x) =="")["TRUE"])
sapply(creditcard, function(x) table(as.character(x) =="")["TRUE"])
sapply(account, function(x) table(as.character(x) =="")["TRUE"])
sapply(loan, function(x) table(as.character(x) =="")["TRUE"])
sapply(permanent_order, function(x) table(as.character(x) =="")["TRUE"])
sapply(transaction, function(x) table(as.character(x) =="")["TRUE"])
source("./scripts/step_04_label_translation.R")
ggplot(data = client) +
aes(x = gender, fill = gender) +
geom_bar() +
labs(title = "Gender distribution of clients in the bank",
subtitle = "A well balanced bank",
x = "Gender",
y = "Total clients") +
theme_minimal()
clientGenderOverDecades <- client %>%
group_by(decade = as.integer(substr(client$birth_number, 1,1)) * 10, gender = client$gender) %>%
count()
ggplot(data = clientGenderOverDecades) +
aes(x = decade, fill = gender, weight = n) +
scale_x_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80)) +
geom_bar() +
geom_line(aes(y = n, color = gender)) +
labs(title = "Gender distribution of clients in the bank over the decades",
subtitle = "Equality at its finest",
x = "Decades",
y = "Total clients") +
theme_minimal() +
facet_wrap(vars(gender))
clientGenderAgeGroupByRegion <- client %>%
mutate(age_group = ifelse(age < 21, "young", ifelse(age >= 21 & age <= 60, "adult", "senior"))) %>%
inner_join(district, by = "district_id") %>%
group_by(age_group, gender, region) %>%
count()
ggplot(data = clientGenderAgeGroupByRegion, aes(axis1 = region, axis2 = age_group, y = n)) +
scale_x_discrete(limits = c("region", "age group"), expand = c(.1, .1)) +
xlab("Demographic") +
geom_alluvium(aes(fill = gender), knot.pos = 0) +
geom_stratum() +
geom_text(stat = "stratum", label.strata = TRUE) +
theme_minimal() +
ggtitle("Region and age group by gender", "Equality is everywhere")
loan <- mutate(loan, defaulter = as.logical( plyr::mapvalues(status, c ('A','B','C','D'), c(FALSE,TRUE,FALSE,TRUE))),
contract_status = plyr::mapvalues(status, c ('A','B','C','D'), c('finished','finished','running','running')),
type = 'Owner')
left_join(loan, disposition, by = 'account_id') %>%
left_join(client, by = 'client_id') %>%
left_join(district, by = 'district_id') %>%
group_by(region, contract_status, defaulter) %>%
summarise(count = n(),
amount = sum(amount)) %>%
group_by(region, contract_status) %>%
mutate(count_contract_status = sum(count),
amount_contract_status = sum(amount)) %>%
group_by(region) %>%
mutate(count_region = sum(count),
amount_region = sum(amount)) %>%
ggplot(aes(x = defaulter, y = contract_status, fill = count / count_region)) +
geom_bin2d(stat = 'identity') +
geom_text(aes(label = paste(round(count / count_region * 100, 2), '%')), color = 'white') +
facet_wrap(~region) +
theme_economist() +
theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = 'Defaulter', y = 'Contract Status', title = 'Loan Contract Status by Region Heatmap')
client <- mutate(client, age_bin = paste(findInterval(age, c(10, 20, 30, 40, 50, 60, 70, 80, 90, 100)) * 10,'+'))
left_join(loan, disposition, by = 'account_id') %>%
left_join(client, by = 'client_id') %>%
left_join(district, by = 'district_id') %>%
group_by(age_bin, contract_status, defaulter) %>%
summarise(count = n(),
amount = sum(amount)) %>%
group_by(age_bin, contract_status) %>%
mutate(count_contract_status = sum(count),
amount_contract_status = sum(amount)) %>%
group_by(age_bin) %>%
mutate(count_age_bin = sum(count),
amount_age_bin = sum(amount)) %>%
ggplot(aes(x = defaulter, y = contract_status, fill = count / count_age_bin)) +
geom_bin2d(stat = 'identity') +
geom_text(aes(label = paste(round(count / count_age_bin * 100, 2), '%')), color = 'white') +
facet_wrap(~age_bin) +
theme_economist() +
theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = 'Defaulter',
y = 'Contract Status',
title = 'Loan Contract Status by Age Group Heatmap')
left_join(loan, disposition, by = 'account_id') %>%
left_join(client, by = 'client_id') %>%
left_join(district, by = 'district_id') %>%
group_by(gender, contract_status, defaulter) %>%
summarise(count = n(),
amount = sum(amount)) %>%
group_by(gender, contract_status) %>%
mutate(count_contract_status = sum(count),
amount_contract_status = sum(amount)) %>%
group_by(gender) %>%
mutate(count_gender = sum(count),
amount_gender = sum(amount)) %>%
ggplot(aes(x = defaulter, y = contract_status, fill = count / count_gender)) +
geom_bin2d(stat = 'identity') +
geom_text(aes(label = paste(round(count / count_gender * 100, 2), '%')), color = 'white') +
facet_wrap(~gender) +
theme_economist() +
theme(legend.position = 'none', panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
labs(x = 'Defaulter',
y = 'Contract Status',
title = 'Loan Contract Status by Gender Heatmap')
account_balance <- arrange(transaction, desc(date), account_id) %>%
group_by(account_id) %>%
mutate(avg_balance = mean(balance)) %>%
filter(row_number() == 1) %>%
select(account_id, date, balance, avg_balance)
colnames(account_balance) <- c("account_id", "last_transaction_date", 'account_balance', 'avg_balance')
left_join(account_balance, disposition, by = 'account_id') %>%
left_join(client, by = 'client_id') %>%
left_join(district, by = 'district_id') %>%
filter(type == 'Owner') %>%
ggplot(aes(avg_balance)) +
geom_density(alpha = 0.5, aes(fill = gender)) +
scale_x_continuous(labels = scales::comma) +
labs(title = 'Average Account Balance Distribution by Gender and Region') +
theme_economist() +
facet_wrap(~region)
