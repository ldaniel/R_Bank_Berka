dataDirectory <- "data/"
client      <- read.csv2(paste(dataDirectory, "client.asc", sep = ""), stringsAsFactors = FALSE)
disposition <- read.csv2(paste(dataDirectory, "disp.asc", sep = ""), stringsAsFactors = FALSE)
district    <- read.csv2(paste(dataDirectory, "district.asc", sep = ""), stringsAsFactors = FALSE)
creditcard  <- read.csv2(paste(dataDirectory, "card.asc", sep = ""), stringsAsFactors = FALSE)
account     <- read.csv2(paste(dataDirectory, "account.asc", sep = ""), stringsAsFactors = FALSE)
# performing data adjustments and cleaning ------------------------------------
# get gender and birthday from birth_number column in client table
client <- client %>%
mutate(gender = GetGenderFromBirthnumber(birth_number)) %>%
mutate(birth_date = GetBirthdateFromBirthnumber(birth_number, gender))
# renaming columns in district table
names(district)[names(district) == "A1"] <- "district_id"
names(district)[names(district) == "A2"] <- "district_name"
names(district)[names(district) == "A3"] <- "region"
names(district)[names(district) == "A4"] <- "no_of_inhabitants"
names(district)[names(district) == "A5"] <- "no_of_municip_inhabitants_less_499"
names(district)[names(district) == "A6"] <- "no_of_municip_500_to_1999"
names(district)[names(district) == "A7"] <- "no_of_municip_2000_to_9999"
names(district)[names(district) == "A8"] <- "no_of_municip_greater_10000"
names(district)[names(district) == "A9"] <- "no_of_cities"
names(district)[names(district) == "A10"] <- "ratio_of_urban_inhabitants"
names(district)[names(district) == "A11"] <- "average_salary"
names(district)[names(district) == "A12"] <- "unemploymant_rate_1995"
names(district)[names(district) == "A13"] <- "unemploymant_rate_1996"
names(district)[names(district) == "A14"] <- "no_of_enterpreneurs_per_1000_inhabitants"
names(district)[names(district) == "A15"] <- "no_of_commited_crimes_1995"
names(district)[names(district) == "A16"] <- "no_of_commited_crimes_1996"
# casting columns with decimal or "?" values in district table
district <- district %>%
mutate(ratio_of_urban_inhabitants = as.double(ratio_of_urban_inhabitants)) %>%
mutate(average_salary = as.double(average_salary)) %>%
mutate(unemploymant_rate_1995 = as.double(unemploymant_rate_1995)) %>%
mutate(unemploymant_rate_1996 = as.double(unemploymant_rate_1996)) %>%
mutate(no_of_commited_crimes_1995 = as.integer(no_of_commited_crimes_1995))
# casting column issued in creditcard table from string to datetime data type
creditcard <- creditcard %>%
mutate(issued  = ymd_hms(issued))
# casting column date  in account table from string to datetime data type
account <- account %>%
mutate(date2 = ymd_hms(date))
# View(client)
# View(disposition)
# View(district)
# View(creditcard)
View(account)
# performing data loading -----------------------------------------------------
dataDirectory <- "data/"
client      <- read.csv2(paste(dataDirectory, "client.asc", sep = ""), stringsAsFactors = FALSE)
disposition <- read.csv2(paste(dataDirectory, "disp.asc", sep = ""), stringsAsFactors = FALSE)
district    <- read.csv2(paste(dataDirectory, "district.asc", sep = ""), stringsAsFactors = FALSE)
creditcard  <- read.csv2(paste(dataDirectory, "card.asc", sep = ""), stringsAsFactors = FALSE)
account     <- read.csv2(paste(dataDirectory, "account.asc", sep = ""), stringsAsFactors = FALSE)
# performing data adjustments and cleaning ------------------------------------
# get gender and birthday from birth_number column in client table
client <- client %>%
mutate(gender = GetGenderFromBirthnumber(birth_number)) %>%
mutate(birth_date = GetBirthdateFromBirthnumber(birth_number, gender))
# renaming columns in district table
names(district)[names(district) == "A1"] <- "district_id"
names(district)[names(district) == "A2"] <- "district_name"
names(district)[names(district) == "A3"] <- "region"
names(district)[names(district) == "A4"] <- "no_of_inhabitants"
names(district)[names(district) == "A5"] <- "no_of_municip_inhabitants_less_499"
names(district)[names(district) == "A6"] <- "no_of_municip_500_to_1999"
names(district)[names(district) == "A7"] <- "no_of_municip_2000_to_9999"
names(district)[names(district) == "A8"] <- "no_of_municip_greater_10000"
names(district)[names(district) == "A9"] <- "no_of_cities"
names(district)[names(district) == "A10"] <- "ratio_of_urban_inhabitants"
names(district)[names(district) == "A11"] <- "average_salary"
names(district)[names(district) == "A12"] <- "unemploymant_rate_1995"
names(district)[names(district) == "A13"] <- "unemploymant_rate_1996"
names(district)[names(district) == "A14"] <- "no_of_enterpreneurs_per_1000_inhabitants"
names(district)[names(district) == "A15"] <- "no_of_commited_crimes_1995"
names(district)[names(district) == "A16"] <- "no_of_commited_crimes_1996"
# casting columns with decimal or "?" values in district table
district <- district %>%
mutate(ratio_of_urban_inhabitants = as.double(ratio_of_urban_inhabitants)) %>%
mutate(average_salary = as.double(average_salary)) %>%
mutate(unemploymant_rate_1995 = as.double(unemploymant_rate_1995)) %>%
mutate(unemploymant_rate_1996 = as.double(unemploymant_rate_1996)) %>%
mutate(no_of_commited_crimes_1995 = as.integer(no_of_commited_crimes_1995))
# casting column issued in creditcard table from string to datetime data type
creditcard <- creditcard %>%
mutate(issued  = ymd_hms(issued))
# casting column date  in account table from string to datetime data type
account <- account %>%
mutate(date2 = as.Date(date, format = "%y%m%d"))
# View(client)
# View(disposition)
# View(district)
# View(creditcard)
View(account)
# performing data loading -----------------------------------------------------
dataDirectory <- "data/"
client      <- read.csv2(paste(dataDirectory, "client.asc", sep = ""), stringsAsFactors = FALSE)
disposition <- read.csv2(paste(dataDirectory, "disp.asc", sep = ""), stringsAsFactors = FALSE)
district    <- read.csv2(paste(dataDirectory, "district.asc", sep = ""), stringsAsFactors = FALSE)
creditcard  <- read.csv2(paste(dataDirectory, "card.asc", sep = ""), stringsAsFactors = FALSE)
account     <- read.csv2(paste(dataDirectory, "account.asc", sep = ""), stringsAsFactors = FALSE)
# performing data adjustments and cleaning ------------------------------------
# get gender and birthday from birth_number column in client table
client <- client %>%
mutate(gender = GetGenderFromBirthnumber(birth_number)) %>%
mutate(birth_date = GetBirthdateFromBirthnumber(birth_number, gender))
# renaming columns in district table
names(district)[names(district) == "A1"] <- "district_id"
names(district)[names(district) == "A2"] <- "district_name"
names(district)[names(district) == "A3"] <- "region"
names(district)[names(district) == "A4"] <- "no_of_inhabitants"
names(district)[names(district) == "A5"] <- "no_of_municip_inhabitants_less_499"
names(district)[names(district) == "A6"] <- "no_of_municip_500_to_1999"
names(district)[names(district) == "A7"] <- "no_of_municip_2000_to_9999"
names(district)[names(district) == "A8"] <- "no_of_municip_greater_10000"
names(district)[names(district) == "A9"] <- "no_of_cities"
names(district)[names(district) == "A10"] <- "ratio_of_urban_inhabitants"
names(district)[names(district) == "A11"] <- "average_salary"
names(district)[names(district) == "A12"] <- "unemploymant_rate_1995"
names(district)[names(district) == "A13"] <- "unemploymant_rate_1996"
names(district)[names(district) == "A14"] <- "no_of_enterpreneurs_per_1000_inhabitants"
names(district)[names(district) == "A15"] <- "no_of_commited_crimes_1995"
names(district)[names(district) == "A16"] <- "no_of_commited_crimes_1996"
# casting columns with decimal or "?" values in district table
district <- district %>%
mutate(ratio_of_urban_inhabitants = as.double(ratio_of_urban_inhabitants)) %>%
mutate(average_salary = as.double(average_salary)) %>%
mutate(unemploymant_rate_1995 = as.double(unemploymant_rate_1995)) %>%
mutate(unemploymant_rate_1996 = as.double(unemploymant_rate_1996)) %>%
mutate(no_of_commited_crimes_1995 = as.integer(no_of_commited_crimes_1995))
# casting column issued in creditcard table from string to datetime data type
creditcard <- creditcard %>%
mutate(issued  = ymd_hms(issued))
# casting column date  in account table from string to datetime data type
account <- account %>%
mutate(date2 = as.Date(account$date, format = "%y%m%d"))
# View(client)
# View(disposition)
# View(district)
# View(creditcard)
View(account)
# performing data loading -----------------------------------------------------
dataDirectory <- "data/"
client      <- read.csv2(paste(dataDirectory, "client.asc", sep = ""), stringsAsFactors = FALSE)
disposition <- read.csv2(paste(dataDirectory, "disp.asc", sep = ""), stringsAsFactors = FALSE)
district    <- read.csv2(paste(dataDirectory, "district.asc", sep = ""), stringsAsFactors = FALSE)
creditcard  <- read.csv2(paste(dataDirectory, "card.asc", sep = ""), stringsAsFactors = FALSE)
account     <- read.csv2(paste(dataDirectory, "account.asc", sep = ""), stringsAsFactors = FALSE)
# performing data adjustments and cleaning ------------------------------------
# get gender and birthday from birth_number column in client table
client <- client %>%
mutate(gender = GetGenderFromBirthnumber(birth_number)) %>%
mutate(birth_date = GetBirthdateFromBirthnumber(birth_number, gender))
# renaming columns in district table
names(district)[names(district) == "A1"] <- "district_id"
names(district)[names(district) == "A2"] <- "district_name"
names(district)[names(district) == "A3"] <- "region"
names(district)[names(district) == "A4"] <- "no_of_inhabitants"
names(district)[names(district) == "A5"] <- "no_of_municip_inhabitants_less_499"
names(district)[names(district) == "A6"] <- "no_of_municip_500_to_1999"
names(district)[names(district) == "A7"] <- "no_of_municip_2000_to_9999"
names(district)[names(district) == "A8"] <- "no_of_municip_greater_10000"
names(district)[names(district) == "A9"] <- "no_of_cities"
names(district)[names(district) == "A10"] <- "ratio_of_urban_inhabitants"
names(district)[names(district) == "A11"] <- "average_salary"
names(district)[names(district) == "A12"] <- "unemploymant_rate_1995"
names(district)[names(district) == "A13"] <- "unemploymant_rate_1996"
names(district)[names(district) == "A14"] <- "no_of_enterpreneurs_per_1000_inhabitants"
names(district)[names(district) == "A15"] <- "no_of_commited_crimes_1995"
names(district)[names(district) == "A16"] <- "no_of_commited_crimes_1996"
# casting columns with decimal or "?" values in district table
district <- district %>%
mutate(ratio_of_urban_inhabitants = as.double(ratio_of_urban_inhabitants)) %>%
mutate(average_salary = as.double(average_salary)) %>%
mutate(unemploymant_rate_1995 = as.double(unemploymant_rate_1995)) %>%
mutate(unemploymant_rate_1996 = as.double(unemploymant_rate_1996)) %>%
mutate(no_of_commited_crimes_1995 = as.integer(no_of_commited_crimes_1995))
# casting column issued in creditcard table from string to datetime data type
creditcard <- creditcard %>%
mutate(issued  = ymd_hms(issued))
# casting column date  in account table from string to datetime data type
account <- account %>%
mutate(date2 = as.Date(date, format = "%y%m%d", origin = "1970-01-01"))
# View(client)
# View(disposition)
# View(district)
# View(creditcard)
View(account)
# performing data loading -----------------------------------------------------
dataDirectory <- "data/"
client      <- read.csv2(paste(dataDirectory, "client.asc", sep = ""), stringsAsFactors = FALSE)
disposition <- read.csv2(paste(dataDirectory, "disp.asc", sep = ""), stringsAsFactors = FALSE)
district    <- read.csv2(paste(dataDirectory, "district.asc", sep = ""), stringsAsFactors = FALSE)
creditcard  <- read.csv2(paste(dataDirectory, "card.asc", sep = ""), stringsAsFactors = FALSE)
account     <- read.csv2(paste(dataDirectory, "account.asc", sep = ""), stringsAsFactors = FALSE)
# performing data adjustments and cleaning ------------------------------------
# get gender and birthday from birth_number column in client table
client <- client %>%
mutate(gender = GetGenderFromBirthnumber(birth_number)) %>%
mutate(birth_date = GetBirthdateFromBirthnumber(birth_number, gender))
# renaming columns in district table
names(district)[names(district) == "A1"] <- "district_id"
names(district)[names(district) == "A2"] <- "district_name"
names(district)[names(district) == "A3"] <- "region"
names(district)[names(district) == "A4"] <- "no_of_inhabitants"
names(district)[names(district) == "A5"] <- "no_of_municip_inhabitants_less_499"
names(district)[names(district) == "A6"] <- "no_of_municip_500_to_1999"
names(district)[names(district) == "A7"] <- "no_of_municip_2000_to_9999"
names(district)[names(district) == "A8"] <- "no_of_municip_greater_10000"
names(district)[names(district) == "A9"] <- "no_of_cities"
names(district)[names(district) == "A10"] <- "ratio_of_urban_inhabitants"
names(district)[names(district) == "A11"] <- "average_salary"
names(district)[names(district) == "A12"] <- "unemploymant_rate_1995"
names(district)[names(district) == "A13"] <- "unemploymant_rate_1996"
names(district)[names(district) == "A14"] <- "no_of_enterpreneurs_per_1000_inhabitants"
names(district)[names(district) == "A15"] <- "no_of_commited_crimes_1995"
names(district)[names(district) == "A16"] <- "no_of_commited_crimes_1996"
# casting columns with decimal or "?" values in district table
district <- district %>%
mutate(ratio_of_urban_inhabitants = as.double(ratio_of_urban_inhabitants)) %>%
mutate(average_salary = as.double(average_salary)) %>%
mutate(unemploymant_rate_1995 = as.double(unemploymant_rate_1995)) %>%
mutate(unemploymant_rate_1996 = as.double(unemploymant_rate_1996)) %>%
mutate(no_of_commited_crimes_1995 = as.integer(no_of_commited_crimes_1995))
# casting column issued in creditcard table from string to datetime data type
creditcard <- creditcard %>%
mutate(issued  = ymd_hms(issued))
# casting column date  in account table from string to datetime data type
account <- account %>%
mutate(date2 = as.Date(date, origin = "1970-01-01"))
# View(client)
# View(disposition)
# View(district)
# View(creditcard)
View(account)
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# performing data loading -----------------------------------------------------
dataDirectory <- "data/"
client      <- read.csv2(paste(dataDirectory, "client.asc", sep = ""), stringsAsFactors = FALSE)
disposition <- read.csv2(paste(dataDirectory, "disp.asc", sep = ""), stringsAsFactors = FALSE)
district    <- read.csv2(paste(dataDirectory, "district.asc", sep = ""), stringsAsFactors = FALSE)
creditcard  <- read.csv2(paste(dataDirectory, "card.asc", sep = ""), stringsAsFactors = FALSE)
account     <- read.csv2(paste(dataDirectory, "account.asc", sep = ""), stringsAsFactors = FALSE)
loan        <- read.csv2(paste(dataDirectory, "loan.asc", sep = ""), stringsAsFactors = FALSE)
# performing data adjustments and cleaning ------------------------------------
# get gender and birthday from birth_number column in client table
client <- client %>%
mutate(gender = GetGenderFromBirthnumber(birth_number)) %>%
mutate(birth_date = GetBirthdateFromBirthnumber(birth_number, gender))
# renaming columns in district table
names(district)[names(district) == "A1"] <- "district_id"
names(district)[names(district) == "A2"] <- "district_name"
names(district)[names(district) == "A3"] <- "region"
names(district)[names(district) == "A4"] <- "no_of_inhabitants"
names(district)[names(district) == "A5"] <- "no_of_municip_inhabitants_less_499"
names(district)[names(district) == "A6"] <- "no_of_municip_500_to_1999"
names(district)[names(district) == "A7"] <- "no_of_municip_2000_to_9999"
names(district)[names(district) == "A8"] <- "no_of_municip_greater_10000"
names(district)[names(district) == "A9"] <- "no_of_cities"
names(district)[names(district) == "A10"] <- "ratio_of_urban_inhabitants"
names(district)[names(district) == "A11"] <- "average_salary"
names(district)[names(district) == "A12"] <- "unemploymant_rate_1995"
names(district)[names(district) == "A13"] <- "unemploymant_rate_1996"
names(district)[names(district) == "A14"] <- "no_of_enterpreneurs_per_1000_inhabitants"
names(district)[names(district) == "A15"] <- "no_of_commited_crimes_1995"
names(district)[names(district) == "A16"] <- "no_of_commited_crimes_1996"
# casting columns with decimal or "?" values in district table
district <- district %>%
mutate(ratio_of_urban_inhabitants = as.double(ratio_of_urban_inhabitants)) %>%
mutate(average_salary = as.double(average_salary)) %>%
mutate(unemploymant_rate_1995 = as.double(unemploymant_rate_1995)) %>%
mutate(unemploymant_rate_1996 = as.double(unemploymant_rate_1996)) %>%
mutate(no_of_commited_crimes_1995 = as.integer(no_of_commited_crimes_1995))
# casting column issued in creditcard table from string to datetime data type
creditcard <- creditcard %>%
mutate(issued  = ymd_hms(issued))
# casting column date  in account table from string to datetime data type
account <- account %>%
mutate(date2 = ConvertToDate(date))
# View(client)
# View(disposition)
# View(district)
# View(creditcard)
# View(account)
View(loan)
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
View(order)
permanentorder <- read.csv2(paste(dataDirectory, "order.asc", sep = ""), stringsAsFactors = FALSE)
View(permanentorder)
permanentorder <- permanentorder %>%
mutate(amount = as.double(amount))
View(permanentorder)
transaction    <- read.csv2(paste(dataDirectory, "trans.asc", sep = ""), stringsAsFactors = FALSE)
View(transaction)
transaction <- transaction %>%
mutate(date = ConvertToDate(date)) %>%
mutate(amount = as.double(amount)) %>%
mutate(balance = as.double(balance))
View(transaction)
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# performing data analysis ----------------------------------------------------
# gender distribution of clients in the bank
ggplot(data = client) +
aes(x = gender) +
geom_bar(fill = "#188977") +
labs(title = "Gender distribution of clients in the bank",
x = "Gender (m = men, w = women)",
y = "Total clients") +
theme_minimal()
# gender distribution of clients in the bank over the decades
clientGenderOverDecades <- client %>%
group_by(decade = as.integer(substr(client$birth_number, 1,1)) * 10, gender = client$gender) %>%
count()
ggplot(data = clientGenderOverDecades) +
aes(x = decade, fill = gender, weight = n) +
scale_x_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80)) +
geom_bar() +
geom_line(aes(y = n, color = gender)) +
labs(title = "Gender distribution of clients in the bank over the decades",
subtitle = "Gender (m = men, w = women)",
x = "Decades",
y = "Total clients") +
theme_minimal() +
facet_wrap(vars(gender))
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
# performing data analysis ----------------------------------------------------
# gender distribution of clients in the bank
ggplot(data = client) +
aes(x = gender) +
geom_bar(fill = "#188977") +
labs(title = "Gender distribution of clients in the bank",
x = "Gender (m = men, w = women)",
y = "Total clients") +
theme_minimal()
# gender distribution of clients in the bank over the decades
clientGenderOverDecades <- client %>%
group_by(decade = as.integer(substr(client$birth_number, 1,1)) * 10, gender = client$gender) %>%
count()
ggplot(data = clientGenderOverDecades) +
aes(x = decade, fill = gender, weight = n) +
scale_x_continuous(breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80)) +
geom_bar() +
geom_line(aes(y = n, color = gender)) +
labs(title = "Gender distribution of clients in the bank over the decades",
subtitle = "Gender (m = men, w = women)",
x = "Decades",
y = "Total clients") +
theme_minimal() +
facet_wrap(vars(gender))
View(creditcard)
View(ggplot)
View(group_by)
View(order)
View(View)
View(Library)
View(library)
View(creditcard)
#' ---
#' title: "Graphical analysis of Duncan data"
#' author: "Michael Friendly"
#' date: "03 Apr 2017"
#' ---
#+ echo=FALSE
knitr::opts_chunk$set(warning=FALSE, message=FALSE, collapse=TRUE)
#' ## load car package and the data
library(car)
data(Duncan, package="carData")
head(Duncan) # first few observations
install.packages("car")
library(car)
data(Duncan, package="carData")
head(Duncan) # first few observations
plot(~ prestige + income + education, data=Duncan)
pairs(~prestige + income + education, data=Duncan)
plot(~ prestige + income + education, data=Duncan)
pairs(~prestige + income + education, data=Duncan)
scatterplotMatrix(~prestige + income + education, data=Duncan, id.n=2)
duncan.mod <- lm(prestige ~ income + education, data=Duncan)
op <- par(mfrow=c(2,2), mar=c(4,4,2,1)+.1)
plot(duncan.mod, cex=1.2, cex.lab=1.2, pch=16, lwd=3)
par(op)
influencePlot(duncan.mod, id.n=3)
avPlots(duncan.mod, id.n=2, pch=16,
ellipse=TRUE,
ellipse.args=list(levels=0.68, fill=TRUE, fill.alpha=0.1))
library(effects)
install.packages("effects")
library(effects)
duncan.eff <- allEffects(duncan.mod)
plot(duncan.eff)
duncan.mod1 <- update(duncan.mod, . ~ . + type)
summary(duncan.mod1)
duncan.eff1 <- allEffects(duncan.mod1)
plot(duncan.eff1)
plot(duncan.eff1, ci.style="bands", rows=1, cols=3)
install.packages("coefplot")
library(coefplot)
duncan.mod2 <- lm(prestige ~ income * education, data=Duncan)
coefplot(duncan.mod2, intercept=FALSE, lwdInner=2,
lwdOuter=1, point.size=5,
title="Coefficient plot for duncan.mod2") + theme_bw()
# loading required libraries --------------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
# loading other scripts do be used here ---------------------------------------
source("./scripts/00_setting_environment.R")
source("./scripts/01_functions.R")
source("./scripts/02_data_ingestion.R")
setwd("D:/OneDrive/FGV/04_Módulos/02 - Análise Exploratória de Dados/TrabalhoFinal")
getwd()
View(creditcard)
View(client)
View(client)
View(account)
View(disposition)
View(transaction)
